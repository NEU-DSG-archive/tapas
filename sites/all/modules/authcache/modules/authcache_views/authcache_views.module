<?php
/**
 * @file
 * Authcache support for views module.
 */

/**
 * Implements hook_authcache_p13n_fragment().
 */
function authcache_views_authcache_p13n_fragment() {
  $views = views_get_all_views();

  $fragments = array();
  foreach ($views as $view) {
    foreach ($view->display as $display_id => $display) {
      $config = _authcache_views_view_get_options($view, $display_id);

      if (!empty($config['status'])) {
        $config += authcache_p13n_config_defaults();
        $fragment_id = "views/{$view->name}/$display_id";
        $granularity = authcache_p13n_config_cache_granularity($config);
        $fragments[$fragment_id] = array(
          'fragment' => array(
            '#class' => 'AuthcacheViewsFragment',
            '#arguments' => array($view->name, $display_id),
          ),
          'bootstrap phase' => DRUPAL_BOOTSTRAP_FULL,
          'cache maxage' => authcache_p13n_config_cache_maxage($config),
          'cache granularity' => $granularity,
        );

        // If this is a page-display and cache-granularity is set to per-page,
        // add a context provider for deriving views arguments from request
        // parameters.
        if ($display->display_plugin == 'page' && $granularity & AuthcacheP13nCacheGranularity::PER_PAGE) {
          $fragments[$fragment_id]['views display page context'] = array(
            '#class' => 'AuthcacheViewsDisplayPageArgumentsContextProvider',
          );

          $fragments[$fragment_id]['context providers'] = array(
            'views arguments' => '@views display page context',
          );
        }
      }
    }
  }

  return $fragments;
}


/**
 * Implements hook_authcache_p13n_admin_config().
 */
function authcache_views_authcache_p13n_admin_config() {
  $views = views_get_all_views();

  $configs = array();
  $configs[] = array(
    'group' => t('Views'),
    'message' =>  t('To add a view to the list of personalized views, visit the <a href="!views_url">Views administration page</a> and click "edit" next to the view in question. The Authcache configuration can be found in the "Advanced" fieldset.', array('!views_url' => url('admin/structure/views'))),
  );

  foreach ($views as $view) {
    foreach (array_keys($view->display) as $display_name) {
      $config = _authcache_views_view_get_options($view, $display_name);

      if (!empty($config['status'])) {
        $fragment_id = "views/{$view->name}/$display_name";
        $configs[] = array(
          'title' => $view->human_name,
          'group' => t('Views'),
          'type' => 'fragment',
          'id' => $fragment_id,
          'config' => $config + authcache_p13n_config_defaults(),
          'path' => 'admin/structure/views/view/' . $view->name . '/edit/' . $display_name,
        );
      }
    }
  }

  return $configs;
}


/**
 * Implements hook_views_api().
 */
function authcache_views_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Implements hook_views_plugins().
 */
function authcache_views_views_plugins() {
  $plugins['display_extender']['authcache_views'] = array(
    'title' => t('Authcache'),
    'help' => t('Use ESI or Ajax to display views with personalized content on cached pages'),
    'handler' => 'authcache_views_plugin_display_extender',
  );

  return $plugins;
}

/**
 * Implements hook_views_post_render().
 */
function authcache_views_views_post_render(&$view, &$output, &$cache) {
  if (authcache_page_is_cacheable()) {
    $config = _authcache_views_view_get_options($view, $view->current_display);

    if (!empty($config['status'])) {
      $fragment_id = "views/{$view->name}/{$view->current_display}";

      $fragment = array(
        '#theme' => 'authcache_p13n_fragment',
        '#fragment' => $fragment_id,
        '#clients' => $config['clients'],
        '#fallback' => $config['fallback'],
      );

      $element = array('#markup' => $output);
      authcache_p13n_attach($element, $fragment);

      $output = render($element);
    }
  }
}

/**
 * Implements hook_authcache_p13n_client_settings().
 */
function authcache_views_authcache_p13n_client_config($type, $name, $view) {
  if ($type == 'fragment' && strpos($name, 'views-') === 0) {
    return _authcache_views_view_get_options($view, $view->current_display);
  }
}

/**
 * Return options for the given view.
 */
function _authcache_views_view_get_options($view, $display_name) {
  if ($view->disabled) {
    return;
  }

  $display_options = $view->display[$display_name]->display_options;
  if (empty($display_options['authcache'])) {
    return;
  }

  return $display_options['authcache'];
}
