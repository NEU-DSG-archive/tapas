<?php

/**
 * @file
 * Authcache storage backend for Drupal core cache system.
 */

/**
 * Implements hook_module_implements_alter().
 *
 * The hook_expire_cache implementation requires authcache_enum. Hide it
 * when this dependency is not met.
 */
function authcache_builtin_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'expire_cache' && !module_exists('authcache_enum')) {
    unset($implementations['authcache_builtin']);
  }
}

/**
 * Implements hook_authcache_cache_save().
 *
 * Cache storage handler for drupal builtin cache-system
 */
function authcache_builtin_authcache_cache_save($body, $headers, $created) {
  // Explicitely set Cache-Control header, otherwise max-age will be set to 0
  // by drupal_serve_page_from_cache.
  drupal_add_http_header('Cache-Control', 'public, max-age=' . variable_get('page_cache_maximum_age', 0));

  $cache = (object) array(
    'cid' => authcache_builtin_cid(),
    'data' => array(
      'path' => $_GET['q'],
      'body' => $body,
      'title' => drupal_get_title(),
      'headers' => $headers,
    ),
    'expire' => CACHE_TEMPORARY,
    'created' => $created,
  );

  cache_set($cache->cid, $cache->data, 'cache_page', $cache->expire);
}

/**
 * Implements hook_expire_cache().
 *
 * Expire cache support for the builtin cache handler
 */
function authcache_builtin_expire_cache($urls) {
  if (!module_exists('authcache_enum')) {
    return;
  }

  $cids = array();

  $keys = authcache_enum_keys();
  foreach ($keys as $key) {
    foreach ($urls as $url) {
      // Expire chops the root-slash from request urls. Therefore we need to
      // add it here between the key and the url.
      $cids[] = $key . '/' . $url;
    }
  }

  cache_clear_all($cids, 'cache_page');
}

/**
 * Implements hook_authcache_debug_info().
 */
function authcache_builtin_authcache_debug_info() {
  $info['Cache Class'] = get_class(_cache_get_object('cache_page'));
  $info['Cache CID'] = authcache_builtin_cid();
  return $info;
}

/**
 * Return the authcache cache-id for the given path.
 *
 * @see authcache_key()
 */
function authcache_builtin_cid($request_uri = NULL) {
  if (!isset($request_uri)) {
    $request_uri = request_uri();
  }

  $key = authcache_key();
  return $key . $request_uri;
}
