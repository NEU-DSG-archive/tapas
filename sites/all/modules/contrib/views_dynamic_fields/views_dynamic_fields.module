<?php
/**
 * @file
 * Registers a views filter.
 *
 * The view hooks allow for registration of a new views filter that allows
 * the user to choose the fields to be excluded from a displayed instance of a view.
 */

/**
 * Implementation of hook_views_data_alter()
 */
function views_dynamic_fields_views_data_alter(&$data) {
  // Register a dummy field to attach the dynamic_fields filter: dyfield
  $data['node']['dyfield'] = array(
    'title' => t('Dynamic Fields'),
    'help' => t("List of fields displayed in a view"),
    'filter' => array(
      'handler' => 'views_handler_filter_dynamic_fields',
    ),
  );
}

/**
 * Implementation of hook_theme()
 */
function views_dynamic_fields_theme() {
  $theme = array(
    'views_dynamic_fields_sort_filter_fields' => array(
      'render element' => 'form',
    ),
  );
  return $theme;
}

/**
 * Theme a drag-sortable table of fields in the exposed filter
 * @param unknown_type $form
 */
function theme_views_dynamic_fields_sort_filter_fields($variables) {
  $form = $variables['form'];
  drupal_add_tabledrag('views-dynamic-fields-filters-table-sort', 'order', 'self', 'sort');
  $header = array('', 'Select', 'Field', 'Weight');
  $rows = array();
  foreach (element_children($form) as $key) {
    $row = array(); // This is important. We need to start with an empty element for the drag handle.
    // Add class to group weight fields for drag and drop.
    $form[$key]['sort']['#attributes']['class'] = array('sort');
    $row[] = drupal_render($form[$key]['check']);
    $row[] = drupal_render($form[$key]['title']);
    $row[] = drupal_render($form[$key]['sort']);
   $rows[] = array('data' => $row, 'class' => array('draggable')); // note the difference between $row and $rows
  }
  $output = theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'views-dynamic-fields-filters-table-sort')));
  $output .= drupal_render_children($form);

  return $output;
}

/**
 * Comparison function based on weights on fields in the exposed filter
 * @param unknown_type $a
 * @param unknown_type $b
 */
function _views_handler_filter_sort_form_field_weights($a, $b) {
  if ($a['sort']['#default_value'] == $b['sort']['#default_value']) {
    return 0;
  }
  return ($a['sort']['#default_value'] < $b['sort']['#default_value']) ? -1 : 1;
}